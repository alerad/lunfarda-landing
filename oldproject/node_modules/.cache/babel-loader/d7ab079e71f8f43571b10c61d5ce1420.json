{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ale\\\\Documents\\\\workspace\\\\lunfarda-landing\\\\src\\\\components\\\\header\\\\HeaderButton.tsx\";\nimport * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Menu, MenuItem } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  header: {\n    height: '60px',\n    backgroundColor: \"#000000\",\n    width: \"100%\"\n  },\n  mainButton: {\n    color: \"#FAFAFA\",\n    textDecoration: 'none'\n  }\n}));\nexport const HeaderButton = ({\n  Text,\n  Url,\n  ClassName,\n  subItems\n}) => {\n  const classes = useStyles();\n\n  if (!subItems) {\n    return /*#__PURE__*/React.createElement(GenerateNormalButton, {\n      Text: Text,\n      Url: Url,\n      ClassName: ClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(GenerateDropDownButton, {\n      Text: Text,\n      Url: Url,\n      ClassName: ClassName,\n      subItems: subItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }\n    });\n  }\n};\n\nconst GenerateNormalButton = props => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Link, {\n    to: `${props.Url}`,\n    style: {\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.mainButton}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: props.ClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, props.Text)));\n};\n\nconst GenerateDropDownButton = props => {\n  var _props$subItems;\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const menuStyle = {\n    marginTop: '2.5rem'\n  };\n  const menuItemStyle = {\n    color: 'white',\n    backgroundColor: 'black'\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `${props.Url}`,\n    style: {\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.mainButton}`,\n    onMouseEnter: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: props.ClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, props.Text))), /*#__PURE__*/React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    style: menuStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, (_props$subItems = props.subItems) === null || _props$subItems === void 0 ? void 0 : _props$subItems.map(x => {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: `${x.Url}`,\n      style: {\n        textDecoration: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: handleClose,\n      style: menuItemStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, x.Text));\n  })));\n};","map":{"version":3,"sources":["C:/Users/Ale/Documents/workspace/lunfarda-landing/src/components/header/HeaderButton.tsx"],"names":["React","makeStyles","Typography","Menu","MenuItem","Link","useStyles","theme","header","height","backgroundColor","width","mainButton","color","textDecoration","HeaderButton","Text","Url","ClassName","subItems","classes","GenerateNormalButton","props","GenerateDropDownButton","anchorEl","setAnchorEl","useState","handleClick","event","currentTarget","handleClose","menuStyle","marginTop","menuItemStyle","Boolean","map","x"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Button, Typography, Menu, MenuItem} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {DropDown} from \"./DropdownButton\";\r\n\r\nexport interface HeaderButtonProps {\r\n    Text : string\r\n    Url: String,\r\n    subItems?: HeaderButtonProps[]\r\n    ClassName?: string\r\n}\r\n\r\nconst useStyles = makeStyles(theme => (\r\n    {\r\n        header: {\r\n            height: '60px',\r\n                backgroundColor: \"#000000\",\r\n                width: \"100%\"\r\n        },\r\n        mainButton: {\r\n            color: \"#FAFAFA\",\r\n            textDecoration: 'none'\r\n        }\r\n    }\r\n));\r\n\r\nexport const HeaderButton: React.FC<HeaderButtonProps> =\r\n    ({ Text, Url, ClassName, subItems }) => {\r\n        const classes = useStyles();\r\n        if (!subItems) {\r\n            return <GenerateNormalButton Text={Text} Url={Url} ClassName={ClassName}/>\r\n        } else {\r\n            return <GenerateDropDownButton Text={Text} Url={Url} ClassName={ClassName} subItems={subItems}/>\r\n        }\r\n    }\r\n\r\n\r\nconst GenerateNormalButton = (props: HeaderButtonProps) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Link to={`${props.Url}`} style={{textDecoration: 'none'}}>\r\n            <div className={`${classes.mainButton}`}>\r\n                <Typography className={props.ClassName}>{props.Text}</Typography>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\n\r\nconst GenerateDropDownButton = (props: HeaderButtonProps) => {\r\n    const classes = useStyles()\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const menuStyle = {\r\n        marginTop: '2.5rem'\r\n    }\r\n\r\n    const menuItemStyle= {\r\n        color:'white',\r\n        backgroundColor: 'black'\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Link to={`${props.Url}`} style={{textDecoration:'none'}}>\r\n                <div className={`${classes.mainButton}`} onMouseEnter={handleClick}>\r\n                    <Typography className={props.ClassName}>{props.Text}</Typography>\r\n                </div>\r\n            </Link>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                style={menuStyle}\r\n            >\r\n                {props.subItems?.map(x => {\r\n                    return (\r\n                        <Link to={`${x.Url}`} style={{textDecoration:'none'}}>\r\n                            <MenuItem onClick={handleClose} style={menuItemStyle}>{x.Text}</MenuItem>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </Menu>\r\n        </React.Fragment>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}