{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ale\\\\Documents\\\\workspace\\\\lunfarda-landing\\\\src\\\\components\\\\landing\\\\dream-vacation\\\\DreamForm.tsx\";\nimport React, { useState } from \"react\";\nimport { FormControl, Grid, TextareaAutosize, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { TextInput } from \"../../forms/TextInput\";\nimport { CustomDateInput } from \"../../CustomDateInput\";\nimport { CtaButton } from \"../../CtaButton\";\nimport emailjs, { init } from \"emailjs-com\";\nimport { AmountPicker } from \"./AmountPicker\";\nimport { FormOk } from \"../../forms/FormOk\";\nimport { toast } from 'react-toastify';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  textArea: {\n    border: '1px solid',\n    borderColor: theme.palette.text.primary,\n    backgroundColor: 'black',\n    resize: 'none',\n    width: '100%',\n    color: theme.palette.neutralText.secondary\n  },\n  formSpacing: {\n    marginBottom: '5%'\n  },\n  datePicker: {\n    \"& .MuiFormLabel-root\": {\n      color: theme.palette.text.primary\n    },\n    fill: theme.palette.text.primary\n  },\n  inputLabelStyle: {\n    color: theme.palette.text.primary\n  }\n}));\nexport const DreamForm = props => {\n  const classes = useStyles();\n  init(\"user_cj6HL59j1sB0doOAAkpof\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [moreInfo, setMoreInfo] = useState(\"\");\n  const [amt, setAmt] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleDateChange = date => {\n    setDate(date);\n  };\n\n  const onSubmitForm = formData => {\n    if (validate(email, name).length === 0) {\n      setSubmitted(true);\n      emailjs.send(\"testemail\", \"template_jtobqor\", {\n        from_name: name,\n        email: email,\n        tour_date: date,\n        tourist_count: amt,\n        extra_info: moreInfo\n      }).then(x => {\n        console.log(\"Mail sent\");\n      });\n    } else {\n      validate(email, name).forEach(x => {\n        toast.error(x, {\n          position: \"bottom-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      });\n    }\n  };\n\n  const validateEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const validate = (email, name) => {\n    let errors = [];\n    if (!email) errors.push(\"Email is required\");\n    if (email && !validateEmail(email)) errors.push(\"Email is invalid\");\n    if (!name) errors.push(\"Name is required\");\n    return errors;\n  };\n\n  if (submitted) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormOk, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      onSubmit: onSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.formSpacing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      label: \"Name\",\n      onChange: e => setName(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.formSpacing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      label: \"Email\",\n      onChange: e => setEmail(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      className: classes.formSpacing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CustomDateInput, {\n      onChange: handleDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 7,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AmountPicker, {\n      onAmountChanged: setAmt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.formSpacing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"secondary\",\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, \"What do you have in mind?\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(TextareaAutosize, {\n      \"aria-label\": \"minimum height\",\n      rowsMin: 6,\n      className: classes.textArea,\n      onChange: e => setMoreInfo(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CtaButton, {\n      style: {\n        marginTop: \"2rem\",\n        width: '40%'\n      },\n      onClick: onSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, \"Send\")))));\n  }\n};","map":{"version":3,"sources":["C:/Users/Ale/Documents/workspace/lunfarda-landing/src/components/landing/dream-vacation/DreamForm.tsx"],"names":["React","useState","FormControl","Grid","TextareaAutosize","Typography","makeStyles","MuiPickersUtilsProvider","DateFnsUtils","TextInput","CustomDateInput","CtaButton","emailjs","init","AmountPicker","FormOk","toast","useStyles","theme","root","textArea","border","borderColor","palette","text","primary","backgroundColor","resize","width","color","neutralText","secondary","formSpacing","marginBottom","datePicker","fill","inputLabelStyle","DreamForm","props","classes","name","setName","email","setEmail","date","setDate","moreInfo","setMoreInfo","amt","setAmt","submitted","setSubmitted","handleDateChange","onSubmitForm","formData","validate","length","send","from_name","tour_date","tourist_count","extra_info","then","x","console","log","forEach","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","validateEmail","re","test","String","toLowerCase","errors","push","e","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\r\nimport {FormControl, Grid, TextareaAutosize, Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {TextInput} from \"../../forms/TextInput\";\r\nimport {CustomDateInput} from \"../../CustomDateInput\";\r\nimport {CtaButton} from \"../../CtaButton\";\r\nimport emailjs, {init} from \"emailjs-com\";\r\nimport {AmountPicker} from \"./AmountPicker\";\r\nimport {FormOk} from \"../../forms/FormOk\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst useStyles = makeStyles(theme => (\r\n    {\r\n        root: {},\r\n        textArea: {\r\n            border: '1px solid',\r\n            borderColor: theme.palette.text.primary,\r\n            backgroundColor: 'black',\r\n            resize: 'none',\r\n            width: '100%',\r\n            color: theme.palette.neutralText.secondary\r\n        },\r\n        formSpacing: {\r\n            marginBottom: '5%'\r\n        },\r\n        datePicker: {\r\n            \"& .MuiFormLabel-root\": {\r\n                color: theme.palette.text.primary\r\n            },\r\n            fill: theme.palette.text.primary\r\n        },\r\n        inputLabelStyle: {\r\n            color: theme.palette.text.primary\r\n        }\r\n    }\r\n));\r\n\r\n\r\ninterface DreamFormProps {\r\n\r\n}\r\n\r\nexport const DreamForm: React.FC<DreamFormProps> = (props) => {\r\n    const classes = useStyles();\r\n    init(\"user_cj6HL59j1sB0doOAAkpof\");\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [date, setDate] = useState(\"\")\r\n    const [moreInfo, setMoreInfo] = useState(\"\")\r\n    const [amt, setAmt] = useState(\"\")\r\n    const [submitted, setSubmitted] = useState(false)\r\n\r\n\r\n    const handleDateChange = (date: any) => {\r\n        setDate(date)\r\n    }\r\n\r\n    const onSubmitForm = (formData: any) => {\r\n        if (validate(email, name).length === 0) {\r\n            setSubmitted(true)\r\n            emailjs.send(\"testemail\",\"template_jtobqor\",{\r\n                from_name: name,\r\n                email: email,\r\n                tour_date: date,\r\n                tourist_count: amt,\r\n                extra_info: moreInfo,\r\n            }).then(x => {\r\n                console.log(\"Mail sent\")\r\n            });\r\n        } else {\r\n            validate(email, name).forEach(x => {\r\n                toast.error(x, {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const validateEmail = (email: string) => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const validate = (email: string, name: string) => {\r\n        let errors = []\r\n\r\n        if (!email)\r\n            errors.push(\"Email is required\")\r\n\r\n        if (email && !validateEmail(email))\r\n            errors.push(\"Email is invalid\")\r\n\r\n        if (!name)\r\n            errors.push(\"Name is required\")\r\n\r\n        return errors\r\n    }\r\n\r\n\r\n    if (submitted) {\r\n        return (\r\n            <Grid item container xs={12}>\r\n                <FormOk/>\r\n            </Grid>\r\n        )\r\n    } else {\r\n        return (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <FormControl onSubmit={onSubmitForm}>\r\n                    <Grid item container xs={12}>\r\n                        <Grid item xs={12} className={classes.formSpacing}>\r\n                            <TextInput label={\"Name\"} onChange={e => setName(e.target.value)}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.formSpacing}>\r\n                            <TextInput label={\"Email\"} onChange={e => setEmail(e.target.value)}/>\r\n                        </Grid>\r\n                        <Grid item container xs={12} className={classes.formSpacing}>\r\n                            <Grid item xs={5} md={6}>\r\n                                <CustomDateInput\r\n                                    onChange={handleDateChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={7} md={6}>\r\n                                <AmountPicker onAmountChanged={setAmt}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.formSpacing}>\r\n                            <Typography color={\"secondary\"} variant={\"subtitle2\"}>\r\n                                What do you have in mind?\r\n                            </Typography>\r\n                            <br/>\r\n                            <TextareaAutosize aria-label=\"minimum height\" rowsMin={6} className={classes.textArea} onChange={e => setMoreInfo(e.target.value)}/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <CtaButton style={{marginTop: \"2rem\", width: '40%'}} onClick={onSubmitForm}>\r\n                                Send\r\n                            </CtaButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </FormControl>\r\n\r\n            </MuiPickersUtilsProvider>\r\n        )\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}